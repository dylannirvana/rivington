/**
 * Below code edits how bookings show in the calendar view of the admin section
 */


 function flagged_data_with_tooltip_function($event) {
    $booking_id = $event->id;
    $post = get_post($booking_id);
    $author_id = $post->post_author;

    $flagged = get_user_meta($author_id, 'flagged');
    $flagged_reason = get_user_meta($author_id, 'flagged_reason');

    $flagged_data = array(
        'flagged' => $flagged,
        'flagged_reason' => $flagged_reason
    );

    return $flagged_data;
}
add_filter('flagged_data_with_tooltip', 'flagged_data_with_tooltip_function', 1, 1);


function register_day_view_calendar_sorting_as_studio_name($arr_datas) {
    usort($arr_datas, function($a, $b) {
		// Extract sorting_order values from $a and $b
		$a_order = $a['sorting_order'];
		$b_order = $b['sorting_order'];
	
		// Compare sorting_order values
		if ($a_order == $b_order) {
			return 0; // They are equal
		}
		return ($a_order < $b_order) ? -1 : 1; // Compare sorting_order values
	});

    return $arr_datas;
}
add_filter('day_view_calendar_sorting_as_studio_name', 'register_day_view_calendar_sorting_as_studio_name', 1, 1);


function register_month_view_calendar_sorting_as_studio_name($events_to_print) {
	usort($events_to_print, function($a, $b) {
		// Extract sorting_order values from $a and $b
		$a_order = $a['sorting_order'];
		$b_order = $b['sorting_order'];
	
		// Compare sorting_order values
		if ($a_order == $b_order) {
			return 0; // They are equal
		}
		return ($a_order < $b_order) ? -1 : 1; // Compare sorting_order values
	});

   return $events_to_print;
}
add_filter('month_view_calendar_sorting_as_studio_name', 'register_month_view_calendar_sorting_as_studio_name', 1, 1);


function add_custom_admin_js() { ?>
    <style type="text/css">
        .day_view_booking_flag {
            position: absolute;
            right: 10px;
            top: 10px;
        }

        .day_view_booking_flag:hover .day_view_booking_flag_tooltip {
            top: -50px;
            opacity: 1;
            visibility: visible;
        }

        .day_view_booking_flag .day_view_booking_flag_tooltip {
            background-color: rgba(0, 0, 0, 0.8);
            color: #fff;
            -webkit-backdrop-filter: blur(1px);
            backdrop-filter: blur(1px);
            text-align: center;
            position: absolute;
            width: max-content;
            min-width: 1px;
            max-width: 130px;
            border-radius: 4px;
            opacity: 0;
            visibility: hidden;
            pointer-events: none;
            padding: 5px 5px 5px 8px;
            transition: opacity 0.5s, visibility 0.5s;
            z-index: 1;
        }
    </style>
    <script type="text/javascript">
        (function($) {
            const day_view = $('.daily_view_booking');
            let flagged = day_view.data('flagged');
            let flagged_reason = day_view.data('flagged-reason');

            if(flagged && flagged === 1) {
                $('.daily_view_booking').append(`<div class="day_view_booking_flag"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M3 6a3 3 0 013-3h10a1 1 0 01.8 1.6L14.25 8l2.55 3.4A1 1 0 0116 13H6a1 1 0 00-1 1v3a1 1 0 11-2 0V6z" clip-rule="evenodd" /></svg><span class="day_view_booking_flag_tooltip">${flagged_reason}</span></div>
                `);
            }
			// let sameSlot = '';
			// let sameSlotArr = [];

			// jQuery('.bookings li').each(function() {
			// 	var bookingTime = jQuery(this).data('booking-time');
			// 	var firstValue = bookingTime.split(' — ')[0]; // Extract the first value before ' — '
				
			// 	// Check if the time slot exists in the object
			// 	if (sameSlotArr.hasOwnProperty(firstValue)) {
			// 		sameSlotArr[firstValue]++; // Increment count for this time slot
			// 	} else {
			// 		sameSlotArr[firstValue] = 1; // Initialize count for this time slot
			// 	}
			// });

			// jQuery.each(sameSlotArr, function(timeSlot, count) {
			// 	for(let i = 0; i < count; i++) {
			// 		console.log("Time Slot: " + timeSlot + ", Count: " + i);
			// 		var liElements = $('ul.bookings li[data-booking-time^="' + timeSlot + '"]');
			// 		// Here you can perform any action you want with liElements for the specific time slot
			// 	}
			// });
			// Find the first li element
			setTimeout(function() {
				var firstLi = $("ul.bookings li").first();

				// $("ul.bookings li").each(function() {
				// 	console.log($(this).css('width'))
				// 	if ($(this).css('left') === '0px' && $(this).css('width') !== 'calc(100% - 13px)') {
				// 		// Set the left value of this li element to the left value of the first li element
				// 		$(this).css('left', '33.33%', 'important');
				// 	}
				// });

				// Check if the first li's width is not 100%
				// if (firstLi.css('width') !== 'calc(100% - 13px)') {
				// 	// Set its left value to 0%
				// 	firstLi.css('left', '0%', 'important');
				// }

				// Find the li elements with 0% left and width not equal to 100%
				
			}, 15000); // 5 seconds delay

            document.addEventListener("DOMContentLoaded", function () {
                setTimeout(function () {
                    let tooltips = document.querySelectorAll(".day_view_booking_flag");

                    tooltips.forEach(function (tooltip) {
                        let tooltipText = tooltip.querySelector(".day_view_booking_flag_tooltip");

                        function adjustTooltipPosition() {
                            let rect = tooltip.getBoundingClientRect();
                            let tooltipWidth = tooltipText.offsetWidth;

                            let spaceLeft = rect.left;
                            let spaceRight = window.innerWidth - rect.right;

                            tooltipText.style.left = "50%";
                            tooltipText.style.right = "auto";
                            tooltipText.style.transform = "translateX(-50%)";

                            if (spaceRight < tooltipWidth / 2) {
                                tooltipText.style.left = "auto";
                                tooltipText.style.right = "0";
                                tooltipText.style.transform = "translateX(0)";
                            }

                            if (spaceLeft < tooltipWidth / 2) {
                                tooltipText.style.left = "0";
                                tooltipText.style.transform = "translateX(0)";
                            }

                            if (rect.top < tooltipText.offsetHeight) {
                                tooltipText.style.top = "100%";
                                tooltipText.style.bottom = "auto";
                            } else {
                                tooltipText.style.bottom = "100%";
                                tooltipText.style.top = "auto";
                            }
                        }
                        adjustTooltipPosition();
                        window.addEventListener("resize", adjustTooltipPosition);
                    });
                }, 100);
            });
        })(jQuery);
    </script>
    <?php
}

add_action( 'admin_footer', 'add_custom_admin_js', 10, 1 );